{"ast":null,"code":"import mockData from \"../mock-data.json\";\nconst TRANSACTIONS_PER_PAGE = 5;\nconst DEFAULT_PAGE = {\n  page: 0\n};\nconst data = {\n  employees: mockData.employees,\n  transactions: mockData.transactions\n};\nexport const getEmployees = () => data.employees;\nexport const getTransactionsPaginated = _ref => {\n  let {\n    page\n  } = _ref;\n\n  if (page === null) {\n    throw new Error(\"Page cannot be null\");\n  }\n\n  const start = page * TRANSACTIONS_PER_PAGE;\n  const end = start + TRANSACTIONS_PER_PAGE;\n\n  if (start > data.transactions.length) {\n    throw new Error(`Invalid page ${page}`);\n  }\n\n  const nextPage = end < data.transactions.length ? page + 1 : null;\n  return {\n    nextPage,\n    data: data.transactions.slice(start, end)\n  };\n};\nexport const getTransactionsByEmployee = _ref2 => {\n  let {\n    employeeId\n  } = _ref2;\n\n  if (!employeeId) {\n    const res = getTransactionsPaginated(DEFAULT_PAGE);\n    return res.data;\n  }\n\n  return data.transactions.filter(transaction => transaction.employee.id === employeeId);\n};\nexport const setTransactionApproval = _ref3 => {\n  let {\n    transactionId,\n    value\n  } = _ref3;\n  const transaction = data.transactions.find(currentTransaction => currentTransaction.id === transactionId);\n\n  if (!transaction) {\n    throw new Error(\"Invalid transaction to approve\");\n  }\n\n  transaction.approved = value;\n  return transaction;\n};","map":{"version":3,"names":["mockData","TRANSACTIONS_PER_PAGE","DEFAULT_PAGE","page","data","employees","transactions","getEmployees","getTransactionsPaginated","Error","start","end","length","nextPage","slice","getTransactionsByEmployee","employeeId","res","filter","transaction","employee","id","setTransactionApproval","transactionId","value","find","currentTransaction","approved"],"sources":["/Users/brandonlu/Downloads/ramp-fe-challenge/src/utils/requests.ts"],"sourcesContent":["import {\n  PaginatedRequestParams,\n  PaginatedResponse,\n  RequestByEmployeeParams,\n  SetTransactionApprovalParams,\n  Transaction,\n  Employee,\n} from \"./types\"\nimport mockData from \"../mock-data.json\"\n\nconst TRANSACTIONS_PER_PAGE = 5\nconst DEFAULT_PAGE: PaginatedRequestParams = {\n  page: 0\n};\n\nconst data: { employees: Employee[]; transactions: Transaction[] } = {\n  employees: mockData.employees,\n  transactions: mockData.transactions,\n}\n\nexport const getEmployees = (): Employee[] => data.employees\n\nexport const getTransactionsPaginated = ({\n  page,\n}: PaginatedRequestParams): PaginatedResponse<Transaction[]> => {\n  if (page === null) {\n    throw new Error(\"Page cannot be null\")\n  }\n\n  const start = page * TRANSACTIONS_PER_PAGE\n  const end = start + TRANSACTIONS_PER_PAGE\n\n  if (start > data.transactions.length) {\n    throw new Error(`Invalid page ${page}`)\n  }\n\n  const nextPage = end < data.transactions.length ? page + 1 : null\n  return {\n    nextPage,\n    data: data.transactions.slice(start, end),\n  }\n}\n\nexport const getTransactionsByEmployee = ({ employeeId }: RequestByEmployeeParams) => {\n  if (!employeeId) {\n    const res = getTransactionsPaginated(DEFAULT_PAGE)\n    return res.data;\n  }\n\n  return data.transactions.filter((transaction) => transaction.employee.id === employeeId)\n}\n\nexport const setTransactionApproval = ({ transactionId, value }: SetTransactionApprovalParams): Transaction => {\n  const transaction = data.transactions.find(\n    (currentTransaction) => currentTransaction.id === transactionId\n  )\n  if (!transaction) {\n    throw new Error(\"Invalid transaction to approve\")\n  }\n  transaction.approved = value \n  \n  return transaction\n}\n"],"mappings":"AAQA,OAAOA,QAAP,MAAqB,mBAArB;AAEA,MAAMC,qBAAqB,GAAG,CAA9B;AACA,MAAMC,YAAoC,GAAG;EAC3CC,IAAI,EAAE;AADqC,CAA7C;AAIA,MAAMC,IAA4D,GAAG;EACnEC,SAAS,EAAEL,QAAQ,CAACK,SAD+C;EAEnEC,YAAY,EAAEN,QAAQ,CAACM;AAF4C,CAArE;AAKA,OAAO,MAAMC,YAAY,GAAG,MAAkBH,IAAI,CAACC,SAA5C;AAEP,OAAO,MAAMG,wBAAwB,GAAG,QAEwB;EAAA,IAFvB;IACvCL;EADuC,CAEuB;;EAC9D,IAAIA,IAAI,KAAK,IAAb,EAAmB;IACjB,MAAM,IAAIM,KAAJ,CAAU,qBAAV,CAAN;EACD;;EAED,MAAMC,KAAK,GAAGP,IAAI,GAAGF,qBAArB;EACA,MAAMU,GAAG,GAAGD,KAAK,GAAGT,qBAApB;;EAEA,IAAIS,KAAK,GAAGN,IAAI,CAACE,YAAL,CAAkBM,MAA9B,EAAsC;IACpC,MAAM,IAAIH,KAAJ,CAAW,gBAAeN,IAAK,EAA/B,CAAN;EACD;;EAED,MAAMU,QAAQ,GAAGF,GAAG,GAAGP,IAAI,CAACE,YAAL,CAAkBM,MAAxB,GAAiCT,IAAI,GAAG,CAAxC,GAA4C,IAA7D;EACA,OAAO;IACLU,QADK;IAELT,IAAI,EAAEA,IAAI,CAACE,YAAL,CAAkBQ,KAAlB,CAAwBJ,KAAxB,EAA+BC,GAA/B;EAFD,CAAP;AAID,CAnBM;AAqBP,OAAO,MAAMI,yBAAyB,GAAG,SAA6C;EAAA,IAA5C;IAAEC;EAAF,CAA4C;;EACpF,IAAI,CAACA,UAAL,EAAiB;IACf,MAAMC,GAAG,GAAGT,wBAAwB,CAACN,YAAD,CAApC;IACA,OAAOe,GAAG,CAACb,IAAX;EACD;;EAED,OAAOA,IAAI,CAACE,YAAL,CAAkBY,MAAlB,CAA0BC,WAAD,IAAiBA,WAAW,CAACC,QAAZ,CAAqBC,EAArB,KAA4BL,UAAtE,CAAP;AACD,CAPM;AASP,OAAO,MAAMM,sBAAsB,GAAG,SAAyE;EAAA,IAAxE;IAAEC,aAAF;IAAiBC;EAAjB,CAAwE;EAC7G,MAAML,WAAW,GAAGf,IAAI,CAACE,YAAL,CAAkBmB,IAAlB,CACjBC,kBAAD,IAAwBA,kBAAkB,CAACL,EAAnB,KAA0BE,aADhC,CAApB;;EAGA,IAAI,CAACJ,WAAL,EAAkB;IAChB,MAAM,IAAIV,KAAJ,CAAU,gCAAV,CAAN;EACD;;EACDU,WAAW,CAACQ,QAAZ,GAAuBH,KAAvB;EAEA,OAAOL,WAAP;AACD,CAVM"},"metadata":{},"sourceType":"module"}